// Generated CODE, PLEASE EDIT WITH CARE 

var $$String=require("String");
var Pervasives=require("Pervasives");
var Lexing=require("Lexing");
var Parsing=require("Parsing");


var
 __ocaml_lex_tables=
  [0,
   '\0\0ýÿ\x01\0ÿÿ\x02\0\x05\0ýÿ\0\0\x07\0\x01\0þÿ\x03\0H\0íÿîÿ(\x01ðÿñÿòÿóÿK\x01n\x01‘\x01÷ÿøÿ´\x01×\x01\0\0è\x01\x04\x001\x02\x01\x03\b\0üÿ\x1f\0\n\0\x12\0—\0|\x02"\0\f\0',
   "\x01\0ÿÿ\0\0ÿÿ\x01\0ÿÿÿÿ\x01\0\0\0\0\0ÿÿ\0\0ÿÿÿÿÿÿ\x10\0ÿÿÿÿÿÿÿÿ\x0b\0\n\0\t\0ÿÿÿÿ\x06\0\x05\0\x04\0\x04\0\x12\0\x02\0\x01\0\0\0ÿÿÿÿÿÿÿÿÿÿ\x04\0\x04\0\x04\0",
   '\x04\0\0\0ÿÿ\0\0\x04\0\b\0\0\0ÿÿ\b\0\x0b\0\0\0\x0b\0\r\0\0\0\0\0ÿÿ\0\0\0\0\0\0\0\0ÿÿÿÿÿÿ\0\0\0\0ÿÿÿÿÿÿÿÿ"\0ÿÿÿÿÿÿ\0\0"\0ÿÿÿÿÿÿÿÿÿÿÿÿ',
   "\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x07\0\x03\0\x03\0\x03\0\x02\0\x07\0\x02\0ÿÿ \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x07\0\0\0\0\0\0\0\0\0\x07\0!\0ÿÿ \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0(\0(\0(\0(\0\0\0\0\0\0\0!\0'\0'\0'\0'\0'\0'\0'\0'\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0 \0'\0'\0'\0'\0'\0'\0'\0'\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0 \0\x14\0\x1d\0\x17\0\x15\0\x0f\0\x0f\0\0\0\x13\0\x12\0\x1a\0\x0f\0\0\0\x19\0\x18\0\x0f\0\x1c\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\0\0\0\0\x0f\0\x0f\0\x0f\0\x0f\0\x16\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x11\0\0\0\x10\0\x0f\0\x1f\0\0\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\0\0\x0f\0\0\0\x0f\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&\0&\0&\0&\0&\0&\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&\0&\0&\0&\0&\0&\0\0\0\0\0\x01\0\n\0ÿÿÿÿÿÿ\x06\0\0\0ÿÿ\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0ÿÿ\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\0\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x0e\0\x0f\0\0\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\0\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\0\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\0\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\0\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\0\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\x0f\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x0f\0\0\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x0f\0\0\0\0\0\x0f\0\0\0$\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0%\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0#\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x0f\0\0\0\x0f\0\0\0$\0\x1e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0%\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\0\0\0\0\0\0\0\0\x1e\0\0\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&\0&\0&\0&\0&\0&\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&\0&\0&\0&\0&\0&\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\0\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1f\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\0\0\0\0\0\0\0\0\x1f\0\0\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\0\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\0\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\0\0",
   "ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x07\0\0\0\x02\0\x04\0\0\0\x05\0\x04\0\b\0 \0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x07\0ÿÿÿÿÿÿÿÿ\x05\0\x1d\0\b\0 \0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0\x1b\0#\0#\0(\0(\0ÿÿÿÿÿÿ\"\0$\0$\0$\0$\0$\0$\0$\0$\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\f\0'\0'\0'\0'\0'\0'\0'\0'\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\f\0\f\0\f\0\f\0\f\0\f\0\f\0ÿÿ\f\0\f\0\f\0\f\0ÿÿ\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0ÿÿÿÿ\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0ÿÿ\f\0\f\0\f\0ÿÿ\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0ÿÿ\f\0ÿÿ\f\0%\0%\0%\0%\0%\0%\0%\0%\0%\0%\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿ%\0%\0%\0%\0%\0%\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ%\0%\0%\0%\0%\0%\0ÿÿÿÿ\0\0\t\0\x04\0\x0b\0\x1d\0\x05\0ÿÿ\b\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\"\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0ÿÿ\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\f\0\x0f\0ÿÿÿÿ\x0f\0\x0f\0\x0f\0ÿÿÿÿÿÿ\x0f\0\x0f\0ÿÿ\x0f\0\x0f\0\x0f\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x0f\0ÿÿ\x0f\0\x0f\0\x0f\0\x0f\0\x0f\0ÿÿÿÿÿÿ\x14\0ÿÿÿÿ\x14\0\x14\0\x14\0ÿÿÿÿÿÿ\x14\0\x14\0ÿÿ\x14\0\x14\0\x14\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x14\0\x0f\0\x14\0\x14\0\x14\0\x14\0\x14\0ÿÿÿÿÿÿ\x15\0ÿÿÿÿ\x15\0\x15\0\x15\0ÿÿÿÿÿÿ\x15\0\x15\0ÿÿ\x15\0\x15\0\x15\0ÿÿÿÿÿÿÿÿÿÿÿÿ\x0f\0ÿÿ\x0f\0ÿÿ\x15\0\x14\0\x15\0\x15\0\x15\0\x15\0\x15\0ÿÿÿÿÿÿ\x16\0ÿÿÿÿ\x16\0\x16\0\x16\0ÿÿÿÿÿÿ\x16\0\x16\0ÿÿ\x16\0\x16\0\x16\0ÿÿÿÿÿÿÿÿÿÿÿÿ\x14\0ÿÿ\x14\0ÿÿ\x16\0\x15\0\x16\0\x16\0\x16\0\x16\0\x16\0ÿÿÿÿÿÿ\x19\0ÿÿÿÿ\x19\0\x19\0\x19\0ÿÿÿÿÿÿ\x19\0\x19\0ÿÿ\x19\0\x19\0\x19\0ÿÿÿÿÿÿÿÿÿÿÿÿ\x15\0ÿÿ\x15\0ÿÿ\x19\0\x16\0\x19\0\x19\0\x19\0\x19\0\x19\0ÿÿÿÿÿÿ\x1a\0ÿÿÿÿ\x1a\0\x1a\0\x1a\0ÿÿÿÿÿÿ\x1a\0\x1a\0ÿÿ\x1a\0\x1a\0\x1a\0ÿÿÿÿÿÿÿÿÿÿÿÿ\x16\0ÿÿ\x16\0ÿÿ\x1a\0\x19\0\x1a\0\x1a\0\x1a\0\x1a\0\x1a\0\x1c\0\x1c\0\x1c\0\x1c\0\x1c\0\x1c\0\x1c\0\x1c\0\x1c\0\x1c\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x1c\0ÿÿÿÿÿÿÿÿÿÿ\x19\0ÿÿ\x19\0ÿÿÿÿ\x1a\0ÿÿ\x1c\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x1c\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x1c\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x1a\0ÿÿ\x1a\0ÿÿ\x1c\0\x1e\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x1c\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0ÿÿÿÿÿÿÿÿ\x1e\0ÿÿ\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0&\0&\0&\0&\0&\0&\0&\0&\0&\0&\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿ&\0&\0&\0&\0&\0&\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ&\0&\0&\0&\0&\0&\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0ÿÿ\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1f\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1e\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0ÿÿÿÿÿÿÿÿ\x1f\0ÿÿ\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0ÿÿ\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0ÿÿ\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0\x1f\0ÿÿ",
   "\0\0\0\0\0\0\x04\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0",
   "\0\0\0\0\x04\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0",
   "\x01\0\0\0\0\0\0\0\x01\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0",

   "ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\0\0\x04\0ÿÿ\0\0\x04\0ÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿÿ\0\0\x04\0",
   "ÿ\x01ÿÿ\0\x01ÿ"];

var
 line=
  function(lexbuf)
   {lexbuf[10]="unknown primitive:caml_make_vect",0;
    lexbuf[10][1]=lexbuf[6],0;
    return __ocaml_lex_line_rec(lexbuf,0);
    };

var
 __ocaml_lex_line_rec=
  function(lexbuf,__ocaml_lex_state)
   {var
     __ocaml_lex_state$1=
      Lexing["new_engine"](__ocaml_lex_tables,__ocaml_lex_state,lexbuf);
    
    if(2<__ocaml_lex_state$1>>>0)
     {lexbuf[1](lexbuf);
      return __ocaml_lex_line_rec(lexbuf,__ocaml_lex_state$1);
      }
    else
     {switch(__ocaml_lex_state$1[0])
       {case 0:return Lexing["sub_lexeme"](lexbuf,lexbuf[5],lexbuf[10][0]);
        case 1:return Lexing["lexeme"](lexbuf);
        case 2:throw Pervasives["Exit"];
        }
      }
    };

var argument=function(lexbuf){return __ocaml_lex_argument_rec(lexbuf,5);};

var
 __ocaml_lex_argument_rec=
  function(lexbuf,__ocaml_lex_state)
   {var
     __ocaml_lex_state$1=
      Lexing["engine"](__ocaml_lex_tables,__ocaml_lex_state,lexbuf);
    
    if(3<__ocaml_lex_state$1>>>0)
     {lexbuf[1](lexbuf);
      return __ocaml_lex_argument_rec(lexbuf,__ocaml_lex_state$1);
      }
    else
     {switch(__ocaml_lex_state$1[0])
       {case 0:return [0,Lexing["lexeme"](lexbuf)];
        case 1:return argument(lexbuf);
        case 2:return 11;
        case 3:throw Parsing["Parse_error"];
        }
      }
    };

var
 line_argument=
  function(lexbuf){return __ocaml_lex_line_argument_rec(lexbuf,9);};

var
 __ocaml_lex_line_argument_rec=
  function(lexbuf,__ocaml_lex_state)
   {var
     __ocaml_lex_state$1=
      Lexing["engine"](__ocaml_lex_tables,__ocaml_lex_state,lexbuf);
    
    if(__ocaml_lex_state$1!=0)
     {if(__ocaml_lex_state$1!=1)
       {lexbuf[1](lexbuf);
        return __ocaml_lex_line_argument_rec(lexbuf,__ocaml_lex_state$1);
        }
      else
       {return 11;}
      }
    else
     {return [0,Lexing["lexeme"](lexbuf)];}
    };

var lexeme=function(lexbuf){return __ocaml_lex_lexeme_rec(lexbuf,12);};

var
 __ocaml_lex_lexeme_rec=
  function(lexbuf,__ocaml_lex_state)
   {var
     __ocaml_lex_state$1=
      Lexing["engine"](__ocaml_lex_tables,__ocaml_lex_state,lexbuf);
    
    if(18<__ocaml_lex_state$1>>>0)
     {lexbuf[1](lexbuf);
      return __ocaml_lex_lexeme_rec(lexbuf,__ocaml_lex_state$1);
      }
    else
     {switch(__ocaml_lex_state$1[0])
       {case 0:return lexeme(lexbuf);
        case 1:return [1,Lexing["lexeme"](lexbuf)];
        case 2:return [2,Lexing["lexeme"](lexbuf)];
        case 3:
         var s=Lexing["lexeme"](lexbuf);
         
         return [1,$$String["sub"](s,1,s["length"]-2)];
         
        case 4:return [4,"unknown primitive:caml_int64_of_string"];
        case 5:return 0;
        case 6:return 1;
        case 7:return 2;
        case 8:return 3;
        case 9:return 4;
        case 10:return 5;
        case 11:return 6;
        case 12:return 7;
        case 13:return 8;
        case 14:return 9;
        case 15:return 10;
        case 16:return [3,Lexing["lexeme"](lexbuf)];
        case 17:return 11;
        case 18:throw Parsing["Parse_error"];
        }
      }
    };

module["exports"]=
{"line":line,
 "lexeme":lexeme,
 "argument":argument,
 "line_argument":line_argument};

